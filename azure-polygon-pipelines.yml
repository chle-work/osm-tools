# OSM polygon export pipeline
# Exports polygons of localities to geoJSON streams.

name: polygon-pipeline

variables:
  imageName: 'polygon-export-docker'

trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

jobs:

- job: export
  container: 
    image: krizleebear/docker-osmium-tool
    endpoint: docker-krizleebear

  strategy:
    matrix:
      #TODO: populate matrix config programatically
      algeria:
        OSM_REGION: 'algeria'
        PBF_URL: 'https://download.geofabrik.de/africa/algeria-latest.osm.pbf'
      angola:
        OSM_REGION: 'angola'
        PBF_URL: 'https://download.geofabrik.de/africa/angola-latest.osm.pbf'
        
  steps:
  - script: |
      set -x
      echo Install osmium
      sudo apt-get update
      sudo apt install -y osmium-tool
      osmium --version
    enabled: false

  - task: DownloadPipelineArtifact@2
    enabled: true
    inputs:
      buildType: 'specific'
      project: 'f85b0393-1484-487a-b6d1-5120b54a70be'
      definition: '3'
      buildVersionToDownload: 'latest'
      itemPattern: 'osm-data-$(OSM_REGION)/$(OSM_REGION).osm.pbf'
      targetPath: '$(System.DefaultWorkingDirectory)'

  - task: Bash@3
    displayName: 'filter and export polygons'
    inputs:
      targetType: 'inline'
      script: |
        set -x
        ls -la
        pwd
        osmium --version

        INPUT_PBF=osm-data-$(OSM_REGION)/$(OSM_REGION).osm.pbf
        ADMIN_PBF=$(OSM_REGION).admins.pbf
        POLYGON_JSON=$(OSM_REGION).admin-polygons.geojsonseq

        osmium tags-filter --output ${ADMIN_PBF} --overwrite ${INPUT_PBF} boundary=administrative
        osmium export ${ADMIN_PBF} --output=${POLYGON_JSON} --omit-rs --overwrite #--geometry-types=polygon

  - task: PublishPipelineArtifact@1
    enabled: true
    displayName: 'Store polygon artifacts'
    inputs:
      targetPath: '$(OSM_REGION).admin-polygons.geojsonseq'
      artifact: 'admin-polygons-$(OSM_REGION)'
      publishLocation: 'pipeline'
